/////////////////////////////////////////////////////////////////////////
  MASTER TODOLIST   MASTER TODOLIST MASTER TODOLIST     MASTER TODOLIST
/////////////////////////////////////////////////////////////////////////


TODO
erstmal nur als Scriptsprache(keine Tababstände), die Logik kann dann nachher easy
ins OOP übertragen werden
	- Nodes sollen nurnoch Strukturen ohne Logik sein -> Logik von Nodes zum Interpreter schieben
	- Ein paar builIn Funktionen
	- Variablen (Symboltable wieder einbinden)
	- Conditions verketten (&& || und (,) )
	- booleansche Logik &, && ; |, || richtig implementieren
	- while
	- do-while
	- for
	- foreach
	- ?Preprocessor?
	- Funktionen
	- Parameter
 	- Rueckgabewerte
nicht so wichtig:
	- Die *Build Klassen sind verwirrend


TODO
 -	Strings als erste Klasse
 - Formatierte Strings   f("Das {} ist {}",fahrzeug,farbe)
 -  Bitwise operationen einfuegen -> Lexer aktualisieren ( & | ^ ~ << >> )
       * The & (bitwise AND) The result of AND is 1 if both of the two bits are 1.
       * The | (bitwise OR)  The result of OR is 1 if any of the two bits is 1.
       * The ^ (bitwise XOR) The result of XOR is 1 if the two bits are different.
       * The ~ (bitwise NOT) all bits are swapped
       * The << (left shift) takes two numbers, left shifts the bits of the first operand, the second operand decides the number of places to shift.
       * The >> (right shift) takes two numbers, right shifts the bits of the first operand, the second operand decides the number of places to shift.
    Je nachdem worin das Ergebnis gespeichert werden soll, wird entweder bitwise oder boolean algebra angewandt.
 - ? Wie werden Pointer funktionieren, denn '*' überschneidet sich mit dem static access modifier ? 
 - Das erzeugen von Objekten soll m�glich sein
 - Objekte sollen als Parameter/R�ckgabewert m�glich sein -> evtl. Data �berarbeiten ?
 - Enums
 - Interfaces
 - Vererbung
 - Casting
 - access modifier hinzufuegen
    * public +
    * private -
    * static *
    * (protected?) /
    * moegliche Zeichen:  � $ % & ? ~ _ . , : ; < > |
    Werden dann im Symboltable eingetragen. Wenn die get() Methode aufgerufen wird, m�ssen einfach nur neue
    Regelungen basierend auf dem AccessModifier der gesuchten Variable erkl�rt werden.
 - lexer.txt, log.txt zu .log aendern und in eigenem /log Ordner aufbewahren
 - ? Betragsstriche |a|?
 - ?skalar (a|a) ?
 - Überschreiben von Rechenoperationen für Objekte

int a = 2² + |test()| * (a|a)
int a = pow(2,2) + abs(test()) * (a*a)
